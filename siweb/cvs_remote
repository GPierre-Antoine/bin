#!/bin/bash

SOFT=$(basename $0)

if [ -z ${CVS_REMOTE_PASSWORD+x}  ];then
    echo "$SOFT : Undefined variable CVS_REMOTE_PASSWORD"
    exit 1;
fi

if [ -z ${CVS_REMOTE_CVSROOT+x}  ];then
    echo "$SOFT : Undefined variable CVS_REMOTE_CVSROOT"
    exit 1;
fi


version_test=false;
pepsi_style=""
debug=false

arguments=$@

while getopts ":t:p:d:" option
do
    case "$option" in
        t)
            version_test=true;
            shift
            shift
            ;;
        p)
            pepsi_style=true
            shift
            shift
            ;;
        d)
            debug=true
            shift
            shift
            ;;
    esac
done

if [ "$#" -lt 2  ]; then
    echo "$SOFT usage : $SOFT [ -d  ] [ -p  ]  [ -t ] cvs_module_path cvs_module_name"
    exit 1;
fi

remote_dir="$1"
module="$2"
prompt="prompt>"
ctrl=" "

mkdir -p "/tmp/$SOFT"
filename="/tmp/$SOFT/$module"

function write_password() {
    echo "expect \"Password:\" {send \"${ctrl}$CVS_REMOTE_PASSWORD\n\"}" >> $filename
}

echo "#!/usr/bin/expect" > $filename
cleanup (){
    rm $filename
}


cvs_update_f () {
    preoption='-q ';
    while getopts ":n:" option
    do
        case "$option" in
            n)
                shift
                preoption="$preoption -n"
                ;;
        esac
    done
    echo "send \"${ctrl}cvs ${preoption} update -P -d ${@} \n\"" >> $filename
}

trap cleanup EXIT
cat <<EOD >> $filename
spawn ssh srv11
send "PS1='$prompt'\n";
send "CVSROOT='$CVS_REMOTE_CVSROOT'\n";
expect "$prompt"
send "cd $remote_dir\n"
EOD

if [ "$version_test" = true ]; then
    if [ "$pepsi_style" = true ]; then
        echo "send \"${ctrl}cvs_$1_test.sh\n\"";
    else
        cvs_update_f $module
    fi
else
    cvs_update_f -n $module
fi

write_password;

cat <<EOD >> $filename
expect "$prompt"
send "logout\n"
expect eof
EOD

chmod +x $filename


if [ "$debug" = true  ]; then
    cat $filename
else
    echo "Starting update of $module"
    $filename
    printf "\nEnd of update\n"
fi

